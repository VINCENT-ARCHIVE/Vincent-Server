name: Vincent CI/CD
on:
  push:
    branches:
      - main
      - Ci/63
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

#      - name: Cache Gradle package
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test --warning-mode all

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASS=${{ secrets.DB_PASS }}
            JWT_TOKEN_SECRET=${{ secrets.JWT_TOKEN_SECRET }}
            BUCKET_NAME=${{ secrets.BUCKET_NAME }}
            BUCKET_ACCESS_KEY=${{ secrets.BUCKET_ACCESS_KEY }}
            BUCKET_SECRET_KEY=${{ secrets.BUCKET_SECRET_KEY }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
          tags: ${{ secrets.DOCKER_USERNAME }}/vincent:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create and Copy .env File to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Create .env file
            mkdir -p ~/project
            echo "DB_URL=${{ secrets.DB_URL }}" > ~/project/.env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ~/project/.env
            echo "DB_PASS=${{ secrets.DB_PASS }}" >> ~/project/.env
            echo "JWT_TOKEN_SECRET=${{ secrets.JWT_TOKEN_SECRET }}" >> ~/project/.env
            echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> ~/project/.env
            echo "BUCKET_ACCESS_KEY=${{ secrets.BUCKET_ACCESS_KEY }}" >> ~/project/.env
            echo "BUCKET_SECRET_KEY=${{ secrets.BUCKET_SECRET_KEY }}" >> ~/project/.env
            echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> ~/project/.env
            echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> ~/project/.env
            chmod 600 ~/project/.env

      - name: Docker Compose on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/project
            ls -l
            docker-compose down
            docker-compose up -d
